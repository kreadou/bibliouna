# Generated by Django 3.2.6 on 2022-10-03 20:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multipleselectionfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('titre', models.TextField(verbose_name='titre')),
                ('auteur', models.CharField(blank=True, max_length=255, verbose_name='auteur')),
                ('directeur', models.CharField(blank=True, max_length=255, verbose_name='directeur')),
                ('co_directeur', models.CharField(blank=True, default='', max_length=255, verbose_name='co-directeur')),
                ('ufr', models.CharField(choices=[('SFA - Sciences Fondamentales et Appliquées', 'SFA - Sciences Fondamentales et Appliquées'), ('SN - Sciences de la Nature', 'SN - Sciences de la Nature'), ('STA - Sciences et Technologies Alimentaires', 'STA - Sciences et Technologies Alimentaires'), ("SGE - Sciences et Gestion de l'Environnement", "SGE - Sciences et Gestion de l'Environnement"), ('EPSS - Ecole Préparatoire aux Sciences de la Santé', 'EPSS - Ecole Préparatoire aux Sciences de la Santé'), ('CFC - Centre de Formation Continue', 'CFC - Centre de Formation Continue')], max_length=255, verbose_name='ufr')),
                ('specialite', models.CharField(choices=[('Agriculture', 'Agriculture'), ('Biochimie', 'Biochimie'), ('Biologie', 'Biologie'), ('Biosciences', 'Biosciences'), ('Chimie', 'Chimie'), ('Dictoinnaire', 'Dictionnaire'), ('Droit', 'Droit'), ('Electronique', 'Electronique'), ('Environnement', 'Environnement'), ('Gestion et Economie', 'Gestion et Economie'), ('Géologie', 'Géologie'), ('Informatique', 'Informatique'), ('Mathématiques', 'Mathématiques'), ('Médecine', 'Médecine'), ('Physique', 'Physique'), ('Sciences Sociales', 'Sciences Sociales'), ('Zoologie', 'Zoologie')], max_length=255, verbose_name='specialite')),
                ('laboratoire', models.CharField(choices=[('01', "SGE - Laboratoire des Sciences de l'Environnement"), ('02', 'LGE - Laboratoire Géosciences et Environnement'), ('03', "LEBA - Laboratoire d'Environnement et de Biologie Aquatique"), ('04', 'LBATPT - Laboratoire de Biochimie Alimentaire et Technologies des Produits Tropicaux'), ('05', 'LNSA - Laboratoire de Nutrition et Sécurité Alimentaire'), ('06', 'LBMA - Laboratoire de Biotechnologie et Microbiologie des Aliments'), ('07', 'LBB - Laboratoire de Biocatalyse et des Bioprocédés')], max_length=255, verbose_name='laboratoire')),
                ('date_soutenance', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='date de soutenance')),
                ('issn', models.CharField(blank=True, default='', max_length=255, verbose_name='issn')),
                ('cote', models.CharField(blank=True, max_length=255, verbose_name='côte ou indexation')),
                ('discipline', models.CharField(choices=[('Agriculture', 'Agriculture'), ('Biochimie', 'Biochimie'), ('Biologie', 'Biologie'), ('Biosciences', 'Biosciences'), ('Chimie', 'Chimie'), ('Dictoinnaire', 'Dictionnaire'), ('Droit', 'Droit'), ('Electronique', 'Electronique'), ('Environnement', 'Environnement'), ('Gestion et Economie', 'Gestion et Economie'), ('Géologie', 'Géologie'), ('Informatique', 'Informatique'), ('Mathématiques', 'Mathématiques'), ('Médecine', 'Médecine'), ('Physique', 'Physique'), ('Sciences Sociales', 'Sciences Sociales'), ('Zoologie', 'Zoologie')], max_length=255, verbose_name='discipline')),
                ('note_generale', models.CharField(blank=True, max_length=255, verbose_name='note générale')),
                ('resume', models.TextField(blank=True, default='', verbose_name='résumé')),
                ('langue_publication', multipleselectionfield.db.fields.MultipleSelectionField(blank=True, choices=[('Français', 'Français'), ('Anglais', 'Anglais'), ('Autres', 'Autres')], default='Français', max_length=255, verbose_name='langues publications')),
                ('langue_originale', multipleselectionfield.db.fields.MultipleSelectionField(blank=True, choices=[('Français', 'Français'), ('Anglais', 'Anglais'), ('Autres', 'Autres')], default='Français', max_length=255, verbose_name='langues originales')),
                ('url_associe', models.CharField(blank=True, max_length=20, verbose_name='url associé')),
                ('format_electronique', multipleselectionfield.db.fields.MultipleSelectionField(blank=True, choices=[('texte', 'texte'), ('pdf', 'pdf'), ('audio', 'audio'), ('vidéo', 'vidéo')], default='texte', max_length=255, verbose_name='formats électroniques')),
                ('type_publication', models.CharField(choices=[('ouvrage', 'ouvrage'), ('thèse', 'thèse'), ('mémoire', 'mémoire'), ('article', 'article')], default='article', max_length=255, verbose_name='type de publication')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='articles', verbose_name='photo couverture')),
                ('fpdf', models.FileField(blank=True, null=True, upload_to='fpdfs', verbose_name='fichier en pdf')),
                ('ftexte', models.FileField(blank=True, null=True, upload_to='ftextes', verbose_name='fichier en texte')),
                ('faudio', models.FileField(blank=True, null=True, upload_to='faudios', verbose_name='fichier en audio')),
                ('fvideo', models.FileField(blank=True, null=True, upload_to='fideos', verbose_name='fichier en vidéo')),
                ('valide_saisie', models.BooleanField(blank=True, default=False, verbose_name='validé la saisie')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Auteur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, verbose_name='nom')),
                ('prenoms', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='prénoms')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='auteurs', verbose_name="photo de l'auteur")),
            ],
            options={
                'ordering': ('nom', 'prenoms'),
            },
        ),
        migrations.CreateModel(
            name='Categorie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=255, unique=True, verbose_name='Libellé')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Civilite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=50, unique=True, verbose_name='Libellé')),
                ('abrege', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Abrégé')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, verbose_name='nom')),
                ('prenoms', models.CharField(max_length=255, verbose_name='prénoms')),
                ('telephone', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='téléphone')),
                ('email', models.EmailField(blank=True, default='', max_length=254, null=True, verbose_name='e-mail')),
                ('sujet', models.TextField(blank=True, default='', null=True, verbose_name='sujet')),
                ('date_contact', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='date contact')),
                ('lu', models.BooleanField(blank=True, default=False, verbose_name='message lu')),
            ],
        ),
        migrations.CreateModel(
            name='Continent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=255, unique=True, verbose_name='Libellé')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Departement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=50, unique=True, verbose_name='Libellé')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=100, unique=True, verbose_name='Libellé')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Editeur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, verbose_name='Raison sociale')),
                ('telephone', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='téléphone')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='editeurs', verbose_name="photo maison d'édition")),
            ],
            options={
                'ordering': ('nom',),
            },
        ),
        migrations.CreateModel(
            name='Etablissement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=255, unique=True, verbose_name='libellé')),
                ('abrege', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='abrégé')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Fonction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=50, unique=True, verbose_name='Libellé')),
            ],
        ),
        migrations.CreateModel(
            name='Jury',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statuto', models.CharField(blank=True, choices=[('Président', 'Président'), ('Directeur', 'Directeur'), ('Co-Directeur', 'Co-Directeur'), ('Rapporteur', 'Rapporteur'), ('Examinateur', 'Examinateur'), ('Coordinateur', 'Coordinateur'), ('Evaluateur', 'Evaluateur')], max_length=255, verbose_name='statut')),
            ],
        ),
        migrations.CreateModel(
            name='Laboratoire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=255, unique=True, verbose_name='libellé')),
                ('abrege', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='abrégé')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Membre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=150, unique=True, verbose_name='nom & prénoms')),
            ],
            options={
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Motcle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=255, unique=True, verbose_name='libellé')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Partenaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raisonSociale', models.CharField(max_length=255, verbose_name='raison sociale')),
                ('sigle', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='sigle')),
                ('telephone', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='téléphone')),
                ('cellulaire', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='cellulaire')),
                ('email', models.EmailField(blank=True, default='', max_length=254, null=True, verbose_name='e-mail')),
                ('logo', models.ImageField(blank=True, default='', null=True, upload_to='partenaires', verbose_name='logo')),
                ('siteweb', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='site web')),
            ],
        ),
        migrations.CreateModel(
            name='Pays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=255, unique=True, verbose_name='Libellé')),
                ('abrege', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Abrégé')),
                ('continent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.continent', verbose_name='Continent')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=50, unique=True, verbose_name='Libellé')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=255, unique=True, verbose_name='Libellé')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=50, unique=True, verbose_name='Libellé')),
            ],
        ),
        migrations.CreateModel(
            name='Societe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raisonSociale', models.CharField(max_length=255, verbose_name='raison sociale')),
                ('sigle', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='sigle')),
                ('telephone', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='téléphone')),
                ('cellulaire', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='cellulaire')),
                ('pagination', models.PositiveIntegerField(blank=True, default=5, verbose_name='nombre de ligne des tableaux')),
                ('photo', models.ImageField(blank=True, default='', null=True, upload_to='images', verbose_name='photo')),
                ('logo', models.ImageField(blank=True, default='', null=True, upload_to='images', verbose_name='logo')),
                ('email', models.EmailField(blank=True, default='', max_length=254, null=True, verbose_name='e-mail')),
                ('alerte_email_jour', models.PositiveIntegerField(blank=True, default=5, null=True, verbose_name='alerte email (en jours)')),
                ('dateEnvoiEmail', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date envoi des email')),
                ('envoiEmailEffectue', models.BooleanField(default=False, verbose_name='envoi de mail effectué')),
                ('nbreJourMaxDateEcheance', models.SmallIntegerField(blank=True, default=90, null=True, verbose_name='nombre de jours max avant échéance')),
                ('entete_table', models.BooleanField(default=False, verbose_name='entêtes des tableaux en couleur des apps')),
            ],
        ),
        migrations.CreateModel(
            name='Specialite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(default='', max_length=255, unique=True, verbose_name='spécialité')),
            ],
        ),
        migrations.CreateModel(
            name='Statut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=255, unique=True, verbose_name='Libellé')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Titre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=255, unique=True, verbose_name='libellé')),
                ('abrege', models.CharField(blank=True, default='', max_length=255, verbose_name='Aabrégé')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='TypeActivite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=255, unique=True, verbose_name='Libellé')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Ufr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=255, unique=True, verbose_name='libellé')),
                ('abrege', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='abrégé')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Ville',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=50, unique=True, verbose_name='Libellé')),
                ('departement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.departement', verbose_name='Département')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Soutenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.TextField(verbose_name='titre')),
                ('auteur', models.CharField(blank=True, max_length=255, verbose_name='auteur')),
                ('date_soutenance', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='date de soutenance')),
                ('annee_soutenance', models.CharField(blank=True, default='', max_length=4, null=True, verbose_name='année de soutenance')),
                ('cote', models.CharField(blank=True, max_length=255, verbose_name='côte ou indexation')),
                ('note_generale', models.CharField(blank=True, max_length=255, verbose_name='note générale')),
                ('resume', models.TextField(blank=True, default='', verbose_name='résumé')),
                ('langue_publication', multipleselectionfield.db.fields.MultipleSelectionField(blank=True, choices=[('Français', 'Français'), ('Anglais', 'Anglais'), ('Autres', 'Autres')], default='Français', max_length=255, verbose_name='langues publications')),
                ('langue_originale', multipleselectionfield.db.fields.MultipleSelectionField(blank=True, choices=[('Français', 'Français'), ('Anglais', 'Anglais'), ('Autres', 'Autres')], default='Français', max_length=255, verbose_name='langues originales')),
                ('url_associe', models.CharField(blank=True, max_length=20, verbose_name='url associé')),
                ('format_electronique', multipleselectionfield.db.fields.MultipleSelectionField(blank=True, choices=[('texte', 'texte'), ('pdf', 'pdf'), ('audio', 'audio'), ('vidéo', 'vidéo')], default='pdf', max_length=255, verbose_name='formats électroniques')),
                ('type_publication', models.CharField(choices=[('ouvrage', 'ouvrage'), ('thèse', 'thèse'), ('mémoire', 'mémoire'), ('article', 'article')], default='thèse', max_length=255, verbose_name='type de publication')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='theses', verbose_name='photo couverture')),
                ('fpdf', models.FileField(blank=True, null=True, upload_to='fpdfs', verbose_name='fichier en pdf')),
                ('ftexte', models.FileField(blank=True, null=True, upload_to='ftextes', verbose_name='fichier en texte')),
                ('faudio', models.FileField(blank=True, null=True, upload_to='faudios', verbose_name='fichier en audio')),
                ('fvideo', models.FileField(blank=True, null=True, upload_to='fideos', verbose_name='fichier en vidéo')),
                ('valide_saisie', models.BooleanField(blank=True, default=False, verbose_name='validé la saisie')),
                ('etablissement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.etablissement', verbose_name='université / établissement')),
                ('laboratoire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='parametre.laboratoire', verbose_name='laboratoire')),
                ('membres', models.ManyToManyField(through='parametre.Jury', to='parametre.Membre', verbose_name='membres du jury')),
                ('motcles', models.ManyToManyField(blank=True, to='parametre.Motcle', verbose_name='Mots-clés')),
                ('specialite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='parametre.specialite', verbose_name='spécialité')),
                ('ufr', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='parametre.ufr', verbose_name='ufr')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=50, unique=True, verbose_name='Libellé')),
                ('pays', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.pays', verbose_name='Pays')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Profil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('civilite', models.CharField(blank=True, choices=[('Monsieur', 'M.'), ('Madame', 'Mme'), ('Mademoiselle', 'Mlle')], max_length=20, verbose_name='civilité')),
                ('nom', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='nom')),
                ('prenoms', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='prenoms')),
                ('telephone', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='téléphone')),
                ('cellulaire', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='cellulaire')),
                ('email', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='e-mail')),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], default='M', max_length=1, verbose_name='sexe')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='users', verbose_name='photo')),
                ('fonction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.fonction', verbose_name='fonction')),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.profession', verbose_name='profession')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name="nom d'utilisateur")),
            ],
        ),
        migrations.CreateModel(
            name='Ouvrage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255, verbose_name='titre')),
                ('titre_parallele', models.CharField(blank=True, default='', max_length=255, verbose_name='titre parallèle')),
                ('sous_titre', models.CharField(blank=True, default='', max_length=255, verbose_name='sous titre')),
                ('annee', models.SmallIntegerField(blank=True, default=1975, verbose_name='année')),
                ('isbn', models.CharField(blank=True, max_length=20, verbose_name='iSBN*')),
                ('cote', models.CharField(blank=True, default='', max_length=255, verbose_name='côte ou indexation')),
                ('note', models.CharField(blank=True, default='', max_length=255, verbose_name='note générale')),
                ('resume', models.TextField(blank=True, default='', verbose_name='résumé')),
                ('langue_publication', multipleselectionfield.db.fields.MultipleSelectionField(blank=True, choices=[('Français', 'Français'), ('Anglais', 'Anglais'), ('Autres', 'Autres')], default='Français', max_length=255, verbose_name='langues publications')),
                ('langue_originale', multipleselectionfield.db.fields.MultipleSelectionField(blank=True, choices=[('Français', 'Français'), ('Anglais', 'Anglais'), ('Autres', 'Autres')], default='Français', max_length=255, verbose_name='langues originales')),
                ('url_associe', models.CharField(blank=True, default='', max_length=20, verbose_name='url associé')),
                ('format_electronique', multipleselectionfield.db.fields.MultipleSelectionField(blank=True, choices=[('texte', 'texte'), ('pdf', 'pdf'), ('audio', 'audio'), ('vidéo', 'vidéo')], default='texte', max_length=255, null=True, verbose_name='formats électroniques')),
                ('type_publication', models.CharField(choices=[('ouvrage', 'ouvrage'), ('thèse', 'thèse'), ('mémoire', 'mémoire'), ('article', 'article')], default='ouvrage', max_length=255, verbose_name='type de publication')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='ouvrages', verbose_name='photo couverture')),
                ('fpdf', models.FileField(blank=True, null=True, upload_to='fpdfs', verbose_name='fichier en pdf')),
                ('ftexte', models.FileField(blank=True, null=True, upload_to='ftextes', verbose_name='fichier en texte')),
                ('faudio', models.FileField(blank=True, null=True, upload_to='faudios', verbose_name='fichier en audio')),
                ('fvideo', models.FileField(blank=True, null=True, upload_to='fideos', verbose_name='fichier en vidéo')),
                ('valide_saisie', models.BooleanField(blank=True, default=False, verbose_name='validé la saisie')),
                ('auteurs', models.ManyToManyField(blank=True, to='parametre.Auteur')),
                ('discipline', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='parametre.discipline', verbose_name='discipline')),
                ('editeurs', models.ManyToManyField(blank=True, to='parametre.Editeur')),
                ('motcles', models.ManyToManyField(blank=True, to='parametre.Motcle', verbose_name='Mots-clés')),
            ],
        ),
        migrations.AddField(
            model_name='membre',
            name='qualification',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='parametre.qualification', verbose_name='qualification'),
        ),
        migrations.AddField(
            model_name='jury',
            name='membre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.membre'),
        ),
        migrations.AddField(
            model_name='jury',
            name='soutenance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.soutenance'),
        ),
        migrations.AddField(
            model_name='jury',
            name='statut',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='parametre.statut'),
        ),
        migrations.AddField(
            model_name='departement',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.region', verbose_name='Région'),
        ),
        migrations.CreateModel(
            name='Commune',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=50, unique=True, verbose_name='Libellé')),
                ('ville', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.ville', verbose_name='Ville')),
            ],
            options={
                'ordering': ('libelle',),
            },
        ),
        migrations.CreateModel(
            name='Activite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('libelle', models.CharField(max_length=255, unique=True, verbose_name='Libellé')),
                ('typeActivite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parametre.typeactivite', verbose_name="Type d'activite")),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='jury',
            unique_together={('soutenance', 'membre')},
        ),
    ]
